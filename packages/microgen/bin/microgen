#!/usr/bin/env node

require('yargonaut').style('green');

const yargs = require('yargs');
const {Generator} = require('..');
const pkg = require('../package');

yargs
    .scriptName('microgen')
    .usage('$0 <cmd> [args]')
    .coerce('config', arg => {
        try {
            return require(require('fs').realpathSync(arg));
        } catch (e) {
            return {};
        }
    })
    .count('verbose')
    .options({
        config: {
            alias: 'c',
            default: './microgen.js',
        }
    })
    .command(['generate', '$0'], 'generate the packages directories', {
        target: {
            alias: 't',
            default: './packages',
        }
    }, async (argv) => {
        return await new Generator({
            ...argv.config,
            rootDir: process.cwd(),
            verbose: argv.verbose,
        }).generate({
            targetDir: argv.target,
            write: true,
            verbose: argv.verbose,
        });
    })
    .command('list-packages', 'list all the packages', {
    }, async (argv) => {
        (await new Generator({
            ...argv.config,
            rootDir: process.cwd(),
            verbose: argv.verbose,
        }).describePackages()).map(p => {
            console.log(`${p.name} (${p.type})`);
        })
    })
    .alias('v', 'verbose')
    .version(pkg.version)
    .describe('version', 'show version information')
    .help('h')
    .showHelpOnFail(false, "Specify --help for available options")
    .epilog(`copyright 2020 - ${pkg.author.name} <${pkg.author.email}>`)
    .argv
